{"ast":null,"code":"var _jsxFileName = \"C:\\\\DEV\\\\CustomHobby\\\\frontend\\\\src\\\\pages\\\\StartPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/StartPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StartPage({\n  setUserId\n}) {\n  _s();\n  const [loginId, setLoginId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // 🚀 1️⃣ 로그인 로직 (예시: 백엔드 API 호출)\n    try {\n      // 실제 백엔드 요청 예시 (백엔드에 따라 변경 가능)\n      const response = await fetch(\"http://localhost:8080/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: loginId,\n          password\n        })\n      });\n      if (!response.ok) throw new Error(\"로그인 실패\");\n      const user = await response.json();\n\n      // 🚀 2️⃣ 로그인 성공 시\n      localStorage.setItem(\"userId\", user.userId);\n      setUserId(user.userId); // ✅ App.jsx의 상태도 즉시 갱신\n      alert(`${user.userId}님 환영합니다!`);\n      navigate(\"/main\"); // 로그인 성공 시 메인으로 이동\n    } catch (error) {\n      console.error(error);\n      alert(\"아이디 또는 비밀번호를 확인해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start-page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: loginId,\n          onChange: e => setLoginId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => navigate(\"/register\"),\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(StartPage, \"3nmwjqg4YMoLoXAhMaKbizK/JIM=\", false, function () {\n  return [useNavigate];\n});\n_c = StartPage;\nvar _c;\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","StartPage","setUserId","_s","loginId","setLoginId","password","setPassword","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","userId","ok","Error","user","json","localStorage","setItem","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/DEV/CustomHobby/frontend/src/pages/StartPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/StartPage.css\";\r\n\r\nexport default function StartPage({ setUserId }) {\r\n  const [loginId, setLoginId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 🚀 1️⃣ 로그인 로직 (예시: 백엔드 API 호출)\r\n    try {\r\n      // 실제 백엔드 요청 예시 (백엔드에 따라 변경 가능)\r\n      const response = await fetch(\"http://localhost:8080/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ userId: loginId, password }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"로그인 실패\");\r\n\r\n      const user = await response.json();\r\n\r\n      // 🚀 2️⃣ 로그인 성공 시\r\n      localStorage.setItem(\"userId\", user.userId);\r\n      setUserId(user.userId); // ✅ App.jsx의 상태도 즉시 갱신\r\n      alert(`${user.userId}님 환영합니다!`);\r\n      navigate(\"/main\"); // 로그인 성공 시 메인으로 이동\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"아이디 또는 비밀번호를 확인해주세요.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"start-page-container\">\r\n      <div className=\"login-card\">\r\n        <h1>로그인</h1>\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"아이디를 입력하세요\"\r\n            value={loginId}\r\n            onChange={(e) => setLoginId(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"비밀번호를 입력하세요\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <div className=\"login-btns\">\r\n            <button type=\"submit\">로그인</button>\r\n            <button type=\"button\" onClick={() => navigate(\"/register\")}>\r\n              회원가입\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}