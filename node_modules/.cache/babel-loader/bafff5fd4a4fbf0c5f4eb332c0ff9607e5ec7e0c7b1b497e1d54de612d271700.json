{"ast":null,"code":"var _jsxFileName = \"C:\\\\DEV\\\\CustomHobby\\\\frontend\\\\frontend\\\\src\\\\pages\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { registerUser } from \"../api/userApi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    userId: \"\",\n    email: \"\",\n    nickname: \"\",\n    region: \"\",\n    age: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await registerUser(formData);\n      alert(\"회원가입 성공! 설문조사 페이지로 이동합니다.\");\n      console.log(response);\n      navigate(\"/survey\");\n    } catch (error) {\n      alert(\"회원가입 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"userId\",\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"nickname\",\n        placeholder: \"\\uB2C9\\uB124\\uC784\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"region\",\n        placeholder: \"\\uC9C0\\uC5ED\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"age\",\n        placeholder: \"\\uB098\\uC774\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"lHW0ORfPPhDGuDRLTHNQybjeyiU=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","registerUser","useNavigate","jsxDEV","_jsxDEV","RegisterPage","_s","navigate","formData","setFormData","userId","email","nickname","region","age","password","handleChange","e","target","name","value","handleSubmit","preventDefault","response","alert","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","type","_c","$RefreshReg$"],"sources":["C:/DEV/CustomHobby/frontend/frontend/src/pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { registerUser } from \"../api/userApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function RegisterPage() {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    userId: \"\",\r\n    email: \"\",\r\n    nickname: \"\",\r\n    region: \"\",\r\n    age: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await registerUser(formData);\r\n      alert(\"회원가입 성공! 설문조사 페이지로 이동합니다.\");\r\n      console.log(response);\r\n      navigate(\"/survey\");\r\n    } catch (error) {\r\n      alert(\"회원가입 중 오류가 발생했습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h1>회원가입 페이지</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"userId\" placeholder=\"아이디\" onChange={handleChange} />\r\n        <input name=\"email\" placeholder=\"이메일\" onChange={handleChange} />\r\n        <input name=\"nickname\" placeholder=\"닉네임\" onChange={handleChange} />\r\n        <input name=\"region\" placeholder=\"지역\" onChange={handleChange} />\r\n        <input name=\"age\" placeholder=\"나이\" onChange={handleChange} />\r\n        <input name=\"password\" type=\"password\" placeholder=\"비밀번호\" onChange={handleChange} />\r\n        <button type=\"submit\">가입하기</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}